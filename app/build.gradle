apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'jacoco-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.adam_lincoln.android.arrowforgithub"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        kapt {
            generateStubs = true
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
            }
        }
        renderscriptTargetApi rootProject.ext.targetSdkVersion
        renderscriptSupportModeEnabled true
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.targetCompatibility
    }
    lintOptions {
        abortOnError true
        fatal 'StopShip'
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

// WARN: Required for tests.
android.applicationVariants.all { variant ->
    if (variant.buildType.name == "debug") {
        def aptOutputDir = new File(buildDir, "generated/source/apt/${variant.unitTestVariant.dirName}")
        variant.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
        assembleDebug.finalizedBy('assembleDebugUnitTest')
    }
}

dependencies {
    // gradle -q dependencies your-app-project:dependencies

    implementation fileTree(include: ["*.jar"], dir: "libs")

    // kotlinVersion
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.ext.kotlinVersion"

    // supportLibraryVersion
    implementation "com.android.support:appcompat-v7:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.ext.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.supportLibraryVersion"

    // androidArchVersion
    implementation "android.arch.lifecycle:extensions:$rootProject.ext.androidArchVersion"
    implementation "android.arch.persistence.room:runtime:$rootProject.ext.androidArchVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.ext.androidArchVersion"

    // daggerVersion
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    // TODO: Which one of these actually works?
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    // misc
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp3Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3Version"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit2Version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2Version"
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "joda-time:joda-time:2.10.1"
    implementation "io.github.inflationx:calligraphy3:3.0.0"
    implementation "io.github.inflationx:viewpump:1.0.0"

    implementation "com.github.bumptech.glide:glide:4.8.0"
    annotationProcessor "com.github.bumptech.glide:compiler:4.8.0"
    implementation "jp.wasabeef:glide-transformations:3.3.0"
    implementation "jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:1.6.2"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:1.6.2"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:1.6.2"

    // Stetho
    implementation "com.facebook.stetho:stetho:1.5.0"
    implementation "com.facebook.stetho:stetho-okhttp3:1.5.0"

    // testing
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
}
